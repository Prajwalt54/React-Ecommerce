App.css

/* ===============================
    SEXY MODERN GLASSMORPHIC DESIGN
=============================== */

body {
  margin: 0;
  font-family: 'Poppins', sans-serif;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
  overflow: hidden;
}

/* ðŸŒŒ Animated gradient waves background */
body::before {
  content: "";
  position: absolute;
  width: 200%;
  height: 200%;
  background: repeating-radial-gradient(
    circle at 50% 50%, 
    rgba(255,255,255,0.03) 0px, 
    rgba(255,255,255,0.03) 2px, 
    transparent 3px, 
    transparent 100px
  );
  animation: rotateBg 60s linear infinite;
}

@keyframes rotateBg {
  from { transform: rotate(0deg) translate(-25%, -25%); }
  to { transform: rotate(360deg) translate(-25%, -25%); }
}

/* ðŸ”¹ Navigation (Glass effect) */
nav {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(12px);
  border: 1px solid rgba(255,255,255,0.2);
  border-radius: 16px;
  padding: 14px 40px;
  display: flex;
  gap: 30px;
  font-weight: 600;
  font-size: 18px;
  box-shadow: 0 8px 32px rgba(0,0,0,0.3);
}

nav a {
  color: white;
  text-decoration: none;
  padding: 10px 20px;
  border-radius: 8px;
  transition: 0.3s;
  position: relative;
}

nav a:hover {
  background: rgba(255,255,255,0.15);
  color: #00f5ff;
  box-shadow: 0 0 15px rgba(0,245,255,0.6);
}

/* ðŸŸ¢ Main card (Glassmorphism with glow) */
main {
  background: rgba(255,255,255,0.08);
  backdrop-filter: blur(18px);
  border: 1px solid rgba(255,255,255,0.15);
  border-radius: 20px;
  padding: 50px 60px;
  margin-top: 50px;
  width: 400px;
  box-shadow: 0 20px 40px rgba(0,0,0,0.4);
  animation: fadeInUp 1s ease-out;
}

/* Neon glow border on hover */
main:hover {
  box-shadow: 0 0 30px rgba(0,255,255,0.5), 0 20px 50px rgba(0,0,0,0.5);
}

/* Inputs (floating glow) */
main input {
  width: 100%;
  padding: 12px 15px;
  margin: 12px 0;
  border-radius: 10px;
  border: none;
  outline: none;
  background: rgba(255,255,255,0.1);
  color: white;
  font-size: 15px;
  backdrop-filter: blur(4px);
  transition: 0.3s;
}

main input::placeholder {
  color: rgba(255,255,255,0.6);
}

main input:focus {
  background: rgba(255,255,255,0.15);
  box-shadow: 0 0 12px rgba(0,255,255,0.6);
  transform: translateY(-2px);
}

/* ðŸŸ£ Sexy Neon Button */
main button {
  width: 100%;
  padding: 14px;
  margin-top: 15px;
  border: none;
  border-radius: 12px;
  background: linear-gradient(90deg, #00f5ff, #0ff0fc, #00f5ff);
  background-size: 300% 300%;
  color: black;
  font-weight: 700;
  font-size: 16px;
  cursor: pointer;
  transition: 0.4s;
  animation: gradientMove 4s linear infinite;
}

main button:hover {
  transform: translateY(-3px) scale(1.02);
  box-shadow: 0 0 20px #00f5ff;
}

@keyframes gradientMove {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* ðŸ”— Login link */
main a {
  display: block;
  margin-top: 15px;
  color: #00f5ff;
  text-decoration: none;
  font-size: 14px;
  transition: 0.3s;
}

main a:hover {
  color: #ffffff;
  text-shadow: 0 0 8px #00f5ff;
}

/* Entry animation */
@keyframes fadeInUp {
  0% { opacity: 0; transform: translateY(30px); }
  100% { opacity: 1; transform: translateY(0); }
}














App.js

import React from 'react';
import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';
import Register from './Register';
import Login from './login';
import './App.css';

// Simple Home Component
function Home() {
  return (
    <div>
      
    </div>
  );
}

function App() {
  return (
    <Router>
      <div>
        <nav>
          <Link to="/">Home</Link> |{" "}
          <Link to="/register">Register</Link> |{" "}
          <Link to="/login">Login</Link>
        </nav>

        <Routes>
          <Route path="/" element={<Home />} />       {/* Home route */}
          <Route path="/register" element={<Register />} />
          <Route path="/login" element={<Login />} />
        </Routes>
      </div>
    </Router>
  );
}

export default App;













Login.css

//LOGIN.CSS

/* Doll / Emoji Animation */
.doll {
  font-size: 50px;
  margin-bottom: 15px;
  transition: all 0.3s ease;
  transform-origin: center;
  animation: blink 4s infinite;
}

/* When eyes are closed */
.eyes-closed {
  animation: none;
  transform: scale(1.1);
}

/* Idle blinking animation */
@keyframes blink {
  0%, 90%, 100% { transform: scaleY(1); }
  95% { transform: scaleY(0.1); } /* Quick blink */
}











login.js

import React, { useState } from 'react';
import './App.css';
import axios from 'axios';

export default function Login() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [isPasswordFocus, setIsPasswordFocus] = useState(false); // For animation

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await axios.post('http://localhost:5000/api/auth/login', { email, password });
      alert(res.data.message);
    } catch (err) {
      alert('Login failed');
    }
  };

  return (
    <div className="form-container">
      {/* Doll / Face Emoji */}
      <div className={`doll ${isPasswordFocus ? 'eyes-closed' : ''}`}>
        {isPasswordFocus ? 'ðŸ˜Œ' : 'ðŸ‘€'}
      </div>

      <h2>Login</h2>
      <form onSubmit={handleSubmit}>
        <input 
          type="email" 
          placeholder="Email" 
          onChange={(e) => setEmail(e.target.value)} 
          required 
        />
        <input
          type="password"
          placeholder="Password"
          onFocus={() => setIsPasswordFocus(true)}
          onBlur={() => setIsPasswordFocus(false)}
          onChange={(e) => setPassword(e.target.value)}
          required
        />
        <button type="submit">Login</button>
        <a href="/register" className="link">Don't have an account? Register</a>
      </form>
    </div>
  );
}







Regisre.css

/* ðŸŒŸ Premium Register Form Container */
.form-container {
  background: rgba(255, 255, 255, 0.08); /* semi-transparent for glass effect */
  backdrop-filter: blur(18px); /* frosted glass */
  border: 1px solid rgba(255,255,255,0.15);
  max-width: 420px;
  width: 100%;
  margin: 60px auto;
  padding: 45px 35px;
  border-radius: 20px;
  text-align: center;
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.3);
  animation: fadeInUp 1s ease-out;
  transition: transform 0.4s ease, box-shadow 0.4s ease;
}

.form-container:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 30px 60px rgba(0, 255, 255, 0.3);
}

/* Premium Heading */
.form-container h2 {
  margin-bottom: 25px;
  color: #00f5ff;
  font-weight: 700;
  font-size: 28px;
  letter-spacing: 1px;
  text-shadow: 0 0 8px rgba(0, 245, 255, 0.5);
}

/* Premium Inputs */
.form-container input {
  width: 100%;
  padding: 12px 15px;
  margin: 12px 0;
  border-radius: 12px;
  border: none;
  outline: none;
  font-size: 15px;
  color: white;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(4px);
  transition: 0.3s;
}

.form-container input::placeholder {
  color: rgba(255,255,255,0.6);
}

.form-container input:focus {
  background: rgba(255, 255, 255, 0.2);
  box-shadow: 0 0 15px rgba(0, 245, 255, 0.4);
  transform: translateY(-2px);
}

/* Sexy Gradient Button */
.form-container button {
  width: 100%;
  padding: 14px;
  margin-top: 15px;
  border: none;
  border-radius: 12px;
  background: linear-gradient(90deg, #00f5ff, #00d4ff, #00f5ff);
  background-size: 300% 300%;
  color: black;
  font-weight: 700;
  font-size: 16px;
  cursor: pointer;
  animation: gradientMove 4s linear infinite;
  transition: 0.4s;
}

.form-container button:hover {
  transform: translateY(-3px) scale(1.03);
  box-shadow: 0 0 20px #00f5ff;
}

/* Premium Login Link */
.form-container .link {
  display: block;
  margin-top: 20px;
  color: #00f5ff;
  text-decoration: none;
  font-size: 14px;
  transition: 0.3s;
}

.form-container .link:hover {
  color: #ffffff;
  text-shadow: 0 0 10px #00f5ff;
}

/* Animations */
@keyframes gradientMove {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes fadeInUp {
  0% { opacity: 0; transform: translateY(30px); }
  100% { opacity: 1; transform: translateY(0); }
}









Register.js
import React, { useState } from 'react';
import './Register.css'; // Ensure this is the correct path to your CSS file
import axios from 'axios';

export default function Register() {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const res = await axios.post('http://localhost:5000/api/auth/register', { name, email, password });
      alert(res.data.message);
    } catch (err) {
      alert('Registration failed');
    }
  };

  return (
    <div className="form-container">
      <h2>Register</h2>
      <form onSubmit={handleSubmit}>
        <input type="text" placeholder="Full Name" onChange={(e) => setName(e.target.value)} required />
        <input type="email" placeholder="Email" onChange={(e) => setEmail(e.target.value)} required />
        <input type="password" placeholder="Password" onChange={(e) => setPassword(e.target.value)} required />
        <button type="submit">Register</button>
        <a href="/login" className="link">Already have an account? Login</a>
      </form>
    </div>
  );
}

